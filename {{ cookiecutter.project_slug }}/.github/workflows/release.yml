name: Deploy to server

on:
  push:
    branches: [ "release-*" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run tests
        run: |
          poetry run pytest

  deployment:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: appleboy/ssh-action@v1.2.1
        name: Deploy to server
        with:
          host: ${{ '{{' }} secrets.SERVER_HOST {{ '}}' }}
          username: ${{ '{{' }} secrets.SERVER_USERNAME {{ '}}' }}
          key: ${{ '{{' }} secrets.SSH_PRIVATE_KEY {{ '}}' }}
          script: |
            cd ${{ '{{' }} secrets.PROJECT_DIR {{ '}}' }}
            git fetch --all
            git reset --hard origin/master
            export PYENV_ROOT="$HOME/.pyenv"
            [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
            eval "$(pyenv init - bash)"
            export PYTHONPATH=".:$PYTHONPATH"
            pyenv local {{ cookiecutter.project_slug }}
            poetry lock
            poetry install
            python manage.py migrate
            python manage.py collectstatic --noinput
            sudo supervisorctl restart {{ cookiecutter.project_slug }}
            {% if cookiecutter.use_celery == "y" %}
            sudo supervisorctl restart {{ cookiecutter.project_slug }}_celery
            {% endif %}
